import { useEffect, useRef } from 'react';
import useOnScreen from '../../../utils/hooks/useOnScreen';
import styled from 'styled-components';
import { Path } from 'progressbar.js';

const ProgressSVG = props => {
    return (
        <svg width="255" height="144" viewBox="0 0 255 144" fill="none" xmlns="http://www.w3.org/2000/svg">
            <style>
                {`.current-uvi {
                    font-family: inherit;
                    fill: black;
                    font-size: 4rem;
                    font-weight: 400;
                }`}
            </style>
            <path strokeWidth="16" fillOpacity="1" stroke="#EBEBF0" d="M 11 143 A 104 104 0 1 1 235 143" />
            {/* <path fillRule="evenodd" clipRule="evenodd" d="M83.2009 46.9165C95.8188 41.69 109.343 39 123 39C136.657 39 150.181 41.69 162.799 46.9165C175.417 52.143 186.882 59.8036 196.539 69.4609C206.196 79.1182 213.857 90.5831 219.083 103.201C224.31 115.819 227 129.343 227 143L243 143C243 127.241 239.896 111.637 233.866 97.078C227.835 82.5189 218.996 69.2902 207.853 58.1472C196.71 47.0042 183.481 38.165 168.922 32.1345C154.363 26.1039 138.759 23 123 23C107.241 23 91.6371 26.1039 77.078 32.1345C62.5189 38.165 49.2902 47.0041 38.1472 58.1472C27.0042 69.2902 18.165 82.5189 12.1345 97.078C6.10389 111.637 3 127.241 3 143H19C19 129.343 21.69 115.819 26.9165 103.201C32.143 90.5831 39.8036 79.1182 49.4609 69.4609C59.1182 59.8036 70.5831 52.143 83.2009 46.9165Z" fill="#EBEBF0" /> */}
            {props.onScreen &&
                <path id="stroke-path" strokeWidth="16" fillOpacity="0" stroke="#FFBF5E" d="M 11 143 A 104 104 0 1 1 235 143" />
            }
            <path d="M231.771 49.4V62H229.989V50.966H227.145V49.4H231.771ZM243.383 60.434V62H234.329V60.776L239.459 55.826C240.083 55.226 240.503 54.71 240.719 54.278C240.935 53.834 241.043 53.39 241.043 52.946C241.043 52.286 240.809 51.776 240.341 51.416C239.885 51.044 239.225 50.858 238.361 50.858C236.969 50.858 235.895 51.314 235.139 52.226L233.915 51.164C234.407 50.564 235.049 50.096 235.841 49.76C236.645 49.424 237.539 49.256 238.523 49.256C239.843 49.256 240.893 49.574 241.673 50.21C242.453 50.834 242.843 51.686 242.843 52.766C242.843 53.438 242.699 54.074 242.411 54.674C242.123 55.274 241.577 55.958 240.773 56.726L236.921 60.434H243.383Z" fill="#C5C5C5" />
            <path d="M167.895 1.256C169.587 1.256 170.889 1.802 171.801 2.894C172.725 3.986 173.187 5.534 173.187 7.538C173.187 8.942 172.935 10.142 172.431 11.138C171.939 12.122 171.243 12.872 170.343 13.388C169.455 13.892 168.417 14.144 167.229 14.144C166.617 14.144 166.041 14.084 165.501 13.964C164.961 13.832 164.493 13.646 164.097 13.406L164.781 12.002C165.393 12.398 166.203 12.596 167.211 12.596C168.519 12.596 169.539 12.194 170.271 11.39C171.015 10.574 171.387 9.392 171.387 7.844V7.394C171.027 7.934 170.529 8.348 169.893 8.636C169.257 8.912 168.543 9.05 167.751 9.05C166.923 9.05 166.179 8.894 165.519 8.582C164.871 8.27 164.361 7.826 163.989 7.25C163.629 6.662 163.449 5.99 163.449 5.234C163.449 4.442 163.641 3.746 164.025 3.146C164.421 2.546 164.955 2.084 165.627 1.76C166.299 1.424 167.055 1.256 167.895 1.256ZM168.057 7.592C168.621 7.592 169.125 7.484 169.569 7.268C170.013 7.052 170.355 6.758 170.595 6.386C170.847 6.014 170.973 5.6 170.973 5.144C170.973 4.7 170.853 4.298 170.613 3.938C170.385 3.566 170.043 3.272 169.587 3.056C169.143 2.828 168.603 2.714 167.967 2.714C167.139 2.714 166.467 2.936 165.951 3.38C165.447 3.824 165.195 4.418 165.195 5.162C165.195 5.906 165.453 6.5 165.969 6.944C166.485 7.376 167.181 7.592 168.057 7.592Z" fill="#C5C5C5" />
            <path d="M87.2453 6.35C88.0733 6.35 88.8113 6.506 89.4593 6.818C90.1193 7.13 90.6353 7.58 91.0073 8.168C91.3793 8.744 91.5653 9.41 91.5653 10.166C91.5653 10.958 91.3673 11.654 90.9713 12.254C90.5873 12.854 90.0533 13.322 89.3693 13.658C88.6973 13.982 87.9413 14.144 87.1013 14.144C85.4093 14.144 84.1013 13.598 83.1773 12.506C82.2653 11.414 81.8093 9.866 81.8093 7.862C81.8093 6.458 82.0553 5.264 82.5473 4.28C83.0513 3.284 83.7473 2.534 84.6353 2.03C85.5353 1.514 86.5793 1.256 87.7673 1.256C88.3793 1.256 88.9553 1.322 89.4953 1.454C90.0353 1.574 90.5033 1.754 90.8993 1.994L90.2153 3.398C89.6153 3.002 88.8113 2.804 87.8033 2.804C86.4953 2.804 85.4693 3.212 84.7253 4.028C83.9813 4.832 83.6093 6.008 83.6093 7.556C83.6093 7.748 83.6153 7.898 83.6273 8.006C83.9873 7.466 84.4793 7.058 85.1033 6.782C85.7393 6.494 86.4533 6.35 87.2453 6.35ZM87.0293 12.686C87.8573 12.686 88.5293 12.464 89.0453 12.02C89.5613 11.576 89.8193 10.982 89.8193 10.238C89.8193 9.494 89.5553 8.906 89.0273 8.474C88.5113 8.03 87.8153 7.808 86.9393 7.808C86.3753 7.808 85.8713 7.916 85.4273 8.132C84.9953 8.348 84.6533 8.642 84.4013 9.014C84.1613 9.386 84.0413 9.8 84.0413 10.256C84.0413 10.7 84.1553 11.108 84.3833 11.48C84.6233 11.84 84.9653 12.134 85.4093 12.362C85.8653 12.578 86.4053 12.686 87.0293 12.686Z" fill="#C5C5C5" />
            <path d="M16.0376 54.692C17.2736 54.812 18.2156 55.196 18.8636 55.844C19.5116 56.48 19.8356 57.296 19.8356 58.292C19.8356 59.012 19.6556 59.666 19.2956 60.254C18.9356 60.83 18.3956 61.292 17.6756 61.64C16.9676 61.976 16.0976 62.144 15.0656 62.144C14.1656 62.144 13.3016 62.012 12.4736 61.748C11.6456 61.472 10.9676 61.094 10.4396 60.614L11.2676 59.192C11.6996 59.6 12.2516 59.93 12.9236 60.182C13.5956 60.422 14.3096 60.542 15.0656 60.542C16.0016 60.542 16.7276 60.344 17.2436 59.948C17.7716 59.552 18.0356 59.006 18.0356 58.31C18.0356 57.614 17.7776 57.074 17.2616 56.69C16.7456 56.306 15.9656 56.114 14.9216 56.114H13.9136V54.854L17.0816 50.966H11.0156V49.4H19.3316V50.624L16.0376 54.692Z" fill="#C5C5C5" />
            <text x="50%" y="120" dominantBaseline="middle" textAnchor="middle" className="current-uvi">{props.uvi}</text>
        </svg>
    );
};

const UVIndexWrapper = styled.div`
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
    width: 100%;
`;

const UVIndex = props => {
    const ref = useRef();
    const onScreen = useOnScreen(ref, '-100px');

    useEffect(() => {
        if (onScreen) {
            const svgPath = document.getElementById('stroke-path');
            const path = new Path(svgPath, {
                duration: 1000,
                easing: 'easeOut'
            });
            path.set(0);
            path.animate(props.uvi * (0.2 / 3));
        }
    }, [props.uvi, onScreen]);

    return (
        <UVIndexWrapper ref={ref}>
            <ProgressSVG uvi={props.uvi} onScreen={onScreen} />
        </UVIndexWrapper>
    );
};

export default UVIndex;
